{"version":3,"sources":["./src/environments/environment.ts","./src/app/company.service.ts","./src/app/company/company.component.ts","./src/app/company/company.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/company-form/company-form.component.ts","./src/app/company-form/company-form.component.html","./src/app/form/form.component.ts","./src/app/form/form.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n  companyData: any;\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  getCompanyData(){\n    // return this.http.get('http://127.0.0.1:8000/api/company').subscribe(data => {\n    //   console.log(data);\n    // });\n    return this.http.get('api/company');\n  }\n\n  getCompanyOptions(){\n    // return this.http.get('http://127.0.0.1:8000/api/company').subscribe(data => {\n    //   console.log(data);\n    // });\n    return this.http.options('api/company');\n    // return this.http.options('api/company').toPromise().then(data => {//javascript Anweisungen});\n  }\n\n  saveCompany(formData, companyForm): any {\n      console.warn(\"blabla\", formData);\n      console.warn(companyForm.controls[\"name\"].invalid);\n      console.warn(companyForm.status);\n      if(companyForm.status == \"VALID\"){\n        console.warn(formData);\n        return this.http.post('api/company/', formData);\n      }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CompanyService } from '../company.service';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit {\n  constructor(\n    public companyService: CompanyService,\n  ) { }\n\n  ngOnInit() {\n    this.companyService.getCompanyData().subscribe(data => {\n      console.warn(data);\n      this.companyService.companyData = data;\n      console.warn(this.companyService.companyData);\n    });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <h3>Firma {{companyService.companyData?.name }}</h3>\n    <app-company-form></app-company-form>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n<!--\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n-->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CompanyComponent } from './company/company.component';\nimport { CompanyFormComponent } from './company-form/company-form.component';\nimport { FormComponent } from './form/form.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CompanyComponent,\n    CompanyFormComponent,\n    FormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule.forRoot([\n      { path: '', component: CompanyComponent },\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\n\nimport { CompanyService } from '../company.service';\nimport {hasOwnProperty} from 'tslint/lib/utils';\n\n@Component({\n  selector: 'app-company-form',\n  templateUrl: './company-form.component.html',\n  styleUrls: ['./company-form.component.css'],\n})\n\nexport class CompanyFormComponent implements OnInit {\n  companyForm;\n  fields;\n  error;\n\n  constructor(\n    public companyService: CompanyService,\n    private formBuilder: FormBuilder\n  ) {\n    companyService.getCompanyOptions().subscribe(data => {\n      this.setFields(data);\n\n      let formJSON = CompanyFormComponent.buildFormJSON(this.fields);\n\n      console.warn(\"hey\", formJSON);\n\n      this.companyForm = this.formBuilder.group(\n        formJSON,\n      );\n\n    });\n  }\n\n  ngOnInit(): void {\n    console.warn(this.fields);\n  }\n\n  setFields(data){\n      this.fields = data[\"actions\"][\"POST\"];\n      console.warn(this.fields);\n  }\n\n  static buildFormJSON(fields): object{\n      let formJSON = {};\n\n      for(let field in fields){\n        if (fields.hasOwnProperty(field)) {\n          formJSON[field] = new FormControl(field, [/*Validators.required*/]);\n        }\n      }\n      return formJSON;\n  }\n\n  onSubmit(formData, companyForm, companyService) {\n    let observable = companyService.saveCompany(formData, companyForm);\n\n    if(observable){\n      observable.subscribe(result => {\n        this.error = null;\n        companyService.getCompanyData().subscribe(\n          data => {\n            companyService.companyData = data;\n          }\n        );\n      },\n      error => {\n        // this.handleSubmitError(error.error);\n        this.error = error.error;\n      });\n    }\n  }\n\n  /*\n  handleSubmitError(error): void {\n    console.warn(error);\n\n    for(let field in error){\n      if(error.hasOwnProperty(field)){\n        let fieldErrorMessages = error[field];\n        console.warn(fieldErrorMessages);\n      }\n    }\n  }\n  */\n\n}\n","<app-form [form]=\"companyForm\" [onSubmit]=\"onSubmit\" [fields]=\"fields\" [service]=\"companyService\"></app-form>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  @Input() form;\n  @Input() onSubmit;\n  @Input() fields;\n  @Input() service;\n  // @Input() handleSubmitError;\n  @Input() error;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form [formGroup]=\"form\" *ngIf=\"form\" (ngSubmit)=\"onSubmit(form.value, form, service)\">\n  <div *ngFor=\"let field of fields | keyvalue\">\n    <div *ngIf=\"field.value.type === 'string'\" class=\"form-group\">\n      <label [attr.for]=\"field.key\">\n        {{ field.value.label }}\n      </label>\n      <input [attr.id]=\"field.key\" type=\"text\" [attr.placeholder]=\"field.value.label\" [formControlName]=\"field.key\"\n             class=\"form-control col-4\"/>\n      <p *ngIf=\"error\">{{ error[field.key] }}</p>\n      <ul *ngIf=\"form.controls[field.key].errors\" class=\"error-list\">\n        <li *ngFor=\"let kv of form.controls[field.key].errors | keyvalue\">{{kv.key}} : {{kv.value}}</li>\n      </ul>\n    </div>\n  </div>\n  <button class=\"btn btn-primary\" type=\"submit\">Speichern</button>\n</form>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}